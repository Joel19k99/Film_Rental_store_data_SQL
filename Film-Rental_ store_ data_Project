-- Film-Rental store data Project

use film_rental;

-- 1. What is the total revenue generated from all rentals in the database? (2 Marks)
SELECT SUM(amount) AS total_revenue
FROM payment;

-- 2. How many rentals were made in each month_name? (2 Marks)
select * from rental;
select distinct monthname(rental_date) as month,count(rental_id) over(partition  by monthname(rental_date)) as no_of_rentals from rental;

-- 3. What is the rental rate of the film with the longest title in the database? (2 Marks)
select * from film;
select rental_rate, length(title) from film order by 2 desc limit 1;-- or
SELECT rental_rate
FROM film
WHERE length(title) = (SELECT MAX(length(title)) FROM film);

-- 4. What is the average rental rate for films that were taken from the last 30 days from the date("2005-05-05 22:04:30")? (2 Marks)
SELECT AVG(f.rental_rate) AS average_rental_rate
FROM film f
JOIN inventory i USING(film_id)
JOIN rental r using(inventory_id)
WHERE r.rental_date >= DATE_SUB('2005-05-05 22:04:30', INTERVAL 30 DAY);

-- 5. What is the most popular category of films in terms of the number of rentals? (3 Marks)
SELECT c.name AS category, COUNT(*) AS rental_count
FROM category c
JOIN film_category fc using(category_id)
JOIN inventory i using(film_id)
JOIN rental r using(inventory_id)
GROUP BY c.name
ORDER BY rental_count DESC
LIMIT 1;

-- 6. Find the longest movie duration from the list of films that have not been rented by any customer. (3 Marks)
SELECT MAX(f.length) AS longest_duration_in_seconds
FROM film f
LEFT JOIN inventory i using(film_id)
LEFT JOIN rental r using(inventory_id)
WHERE r.rental_id IS NULL;

-- 7. What is the average rental rate for films, broken down by category? (3 Marks)
SELECT name AS category, AVG(rental_rate) AS avg_rental_rate
FROM category
JOIN film_category USING (category_id)
JOIN film USING (film_id)
GROUP BY 1; 

-- 8. What is the total revenue generated from rentals for each actor in the database? (3 Marks)
SELECT a.actor_id, a.first_name, a.last_name, SUM(p.amount) AS total_revenue
FROM actor a
JOIN film_actor fa using(actor_id)
JOIN film f using(film_id)
JOIN inventory i using(film_id)
JOIN rental r using(inventory_id)
JOIN payment p using(rental_id)
GROUP BY a.actor_id, a.first_name, a.last_name;

-- 9. Show all the actresses who worked in a film having a "Wrestler" in the description. (3 Marks) 
SELECT DISTINCT a.actor_id, a.first_name, a.last_name
FROM actor a
JOIN film_actor fa using(actor_id)
JOIN film f using(film_id)
WHERE f.description LIKE '%Wrestler%';# gender column is not there in actors table so we cannot get the actresses

-- 10. Which customers have rented the same film more than once? (3 Marks)
SELECT c.customer_id, c.first_name, c.last_name
FROM customer c
JOIN rental r using(customer_id)
JOIN (SELECT inventory_id FROM rental
    GROUP BY inventory_id HAVING COUNT(*) > 1) as Duplicate_rentals using(inventory_id)
GROUP BY c.customer_id, c.first_name, c.last_name;

-- 11. How many films in the comedy category have a rental rate higher than the average rental rate? (3 Marks)
SELECT COUNT(*) AS film_count
FROM film f
JOIN film_category fc using(film_id)
JOIN category c using(category_id)
WHERE c.name = 'Comedy' AND f.rental_rate > (SELECT AVG(rental_rate)FROM film);

-- 12. What is the total amount spent by customers whose rental payments exceed $200? (3 Marks)
select customer_id,sum(amount) as  total_amount from payment group by customer_id having total_amount>200;

-- 13. Create a View for the total revenue generated by each staff member, broken down by store city with the country name. (4 Marks)
CREATE VIEW staff_revenue_view AS
SELECT s.staff_id, s.first_name, s.last_name, s.store_id, c.city, co.country, SUM(p.amount) AS total_revenue
FROM staff s
JOIN store st using(store_id)
JOIN address a ON st.address_id = a.address_id
JOIN city c using(city_id)
JOIN payment p using(staff_id)
join country co using(country_id)
GROUP BY s.staff_id, s.first_name, s.last_name, s.store_id, c.city, co.country;


    
    
       
    
